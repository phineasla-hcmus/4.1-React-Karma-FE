generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CHUYENKHOAN {
  maCK            Int               @id @default(autoincrement()) @map("MACK")
  nguoiChuyen     String            @map("NGUOICHUYEN") @db.VarChar(12)
  nguoiNhan       String            @map("NGUOINHAN") @db.VarChar(12)
  soTien          Int               @map("SOTIEN")
  noiDungCK       String?           @map("NOIDUNGCK")
  chuyenNoiBo     Boolean           @map("CHUYENNOIBO")
  ngayCK          DateTime          @map("NGAYCK") @db.Date
  nganHang        Int?              @map("NGANHANG")
  nganHangLienKet NGANHANGLIENKET?  @relation(fields: [nganHang], references: [maNH], onDelete: NoAction, onUpdate: NoAction, map: "FK_CHUYENKHOAN_NGANHANGLIENKET")
  taiKhoanChuyen  TAIKHOANTHANHTOAN @relation("CHUYENKHOAN_NGUOICHUYENToTAIKHOANTHANHTOAN", fields: [nguoiChuyen], references: [soTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_CHUYENKHOAN_TAIKHOANTHANHTOAN1")
  taiKhoanNhan    TAIKHOANTHANHTOAN @relation("CHUYENKHOAN_NGUOINHANToTAIKHOANTHANHTOAN", fields: [nguoiNhan], references: [soTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_CHUYENKHOAN_TAIKHOANTHANHTOAN2")
}

model DANHSACHDALUU {
  maTK              Int      @map("MATK")
  nguoiDung         Int      @map("NGUOIDUNG")
  tenGoiNho         String   @map("TENGOINHO") @db.VarChar(20)
  taiKhoanChuDS     TAIKHOAN @relation("DANHSACHDALUU_MATKToTAIKHOAN", fields: [maTK], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_DANHSACHDALUU1_TAIKHOAN")
  taiKhoanNguoiDung TAIKHOAN @relation("DANHSACHDALUU_NGUOIDUNGToTAIKHOAN", fields: [nguoiDung], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_DANHSACHDALUU2_TAIKHOAN")

  @@id([maTK, nguoiDung])
}

model KHACHHANG {
  maKH     Int       @id @default(autoincrement()) @map("MAKH")
  hoTen    String    @map("HOTEN") @db.VarChar(30)
  email    String    @map("EMAIL") @db.VarChar(30)
  sdt      String    @map("SDT") @db.VarChar(10)
  maTK     Int?      @map("MATK")
  taiKhoan TAIKHOAN? @relation(fields: [maTK], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_KHACHHANG_TAIKHOAN")
}

model NGANHANGLIENKET {
  maNH        Int           @id @default(autoincrement()) @map("MANH")
  tenNH       String        @map("TENNH") @db.VarChar(50)
  kPublic     String        @map("KPUBLIC") @db.VarChar(256)
  kPrivate    String        @map("KPRIVATE") @db.VarChar(256)
  kSecret     String        @map("KSECRET") @db.VarChar(256)
  chuyenKhoan CHUYENKHOAN[]
}

model NHACNO {
  maNN              Int       @id @default(autoincrement()) @map("MANN")
  nguoiGui          Int       @map("NGUOIGUI")
  nguoiNhan         Int       @map("NGUOINHAN")
  soTien            Int       @map("SOTIEN")
  ngayTao           DateTime  @default(now()) @map("NGAYTAO") @db.Date
  noiDungNN         String?   @map("NOIDUNGNN")
  trangThai         Boolean   @default(true) @map("TRANGTHAI")
  ngayThanhToan     DateTime? @map("NGAYTHANHTOAN") @db.Date
  taiKhoanNguoiGui  TAIKHOAN  @relation("NHACNO_NGUOIGUIToTAIKHOAN", fields: [nguoiGui], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_NHACNO1_TAIKHOAN")
  taiKhoanNguoiNhan TAIKHOAN  @relation("NHACNO_NGUOINHANToTAIKHOAN", fields: [nguoiNhan], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_NHACNO2_TAIKHOAN")
}

model NHANVIEN {
  maNV     Int       @id @default(autoincrement()) @map("MANV")
  hoTen    String    @map("HOTEN") @db.VarChar(30)
  sdt      String    @map("SDT") @db.VarChar(10)
  maTK     Int?      @map("MATK")
  taikhoan TAIKHOAN? @relation(fields: [maTK], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_NHANVIEN_TAIKHOAN")
}

model TAIKHOAN {
  maTK              Int                @id @default(autoincrement()) @map("MATK")
  tenDangNhap       String             @map("TENDANGNHAP") @db.VarChar(20)
  matKhau           String             @map("MATKHAU") @db.VarChar(100)
  vaiTro            vaitro             @map("VAITRO")
  dsTaiKhoan        DANHSACHDALUU[]    @relation("DANHSACHDALUU_MATKToTAIKHOAN")
  thuocDanhSach     DANHSACHDALUU[]    @relation("DANHSACHDALUU_NGUOIDUNGToTAIKHOAN")
  khachHang         KHACHHANG[]
  dsNhanNo          NHACNO[]           @relation("NHACNO_NGUOIGUIToTAIKHOAN")
  duocNhacNo        NHACNO[]           @relation("NHACNO_NGUOINHANToTAIKHOAN")
  nhanVien          NHANVIEN[]
  taiKhoanThanhToan TAIKHOANTHANHTOAN?
}

model TAIKHOANTHANHTOAN {
  soTK            String        @id @map("SOTK") @db.VarChar(12)
  soDu            Int           @map("SODU")
  maTK            Int?          @unique @map("MATK")
  chuyenKhoan     CHUYENKHOAN[] @relation("CHUYENKHOAN_NGUOICHUYENToTAIKHOANTHANHTOAN")
  duocChuyenKhoan CHUYENKHOAN[] @relation("CHUYENKHOAN_NGUOINHANToTAIKHOANTHANHTOAN")
  taiKhoan        TAIKHOAN?     @relation(fields: [maTK], references: [maTK], onDelete: NoAction, onUpdate: NoAction, map: "FK_TAIKHOANTHANHTOAN_TAIKHOAN")
}

enum vaitro {
  Admin
  User
  Banker
}
